# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# See https://www.packer.io/docs/templates/hcl_templates/blocks/packer for more info
packer {
  required_plugins {
    qemu = {
      source  = "github.com/hashicorp/qemu"
      version = "~> 1"
    }
    vagrant = {
      source  = "github.com/hashicorp/vagrant"
      version = "~> 1"
    }
    vmware = {
      source  = "github.com/hashicorp/vmware"
      version = "~> 1"
    }
  }
}

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "autounattend" {
  type    = string
  default = "./answer_files/2022_core/Autounattend.xml"
}

variable "disk_size" {
  type    = string
  default = "61440"
}

variable "disk_type_id" {
  type    = string
  default = "1"
}

variable "headless" {
  type    = string
  default = "false"
}

#variable "hyperv_switchname" {
#  type = string
#}

variable "iso_checksum" {
  type    = string
  default = "sha256:3e4fa6d8507b554856fc9ca6079cc402df11a8b79344871669f0251535255325"
}

variable "iso_url" {
  type    = string
  default = "C:/Users/Ali/Downloads/Server2022.iso"
}

#variable "manually_download_iso_from" {
#  type    = string
#  default = "https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2022"
#}

variable "memory" {
  type    = string
  default = "2048"
}

variable "virtio_win_iso" {
  type    = string
  default = "~/virtio-win.iso"
}

variable "winrm_timeout" {
  type    = string
  default = "6h"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
#source "hyperv-iso" "autogenerated_1" {
#  boot_wait             = "0s"
#  communicator          = "winrm"
#  configuration_version = "8.0"
#  cpus                  = 2
#  disk_size             = "${var.disk_size}"
#  enable_secure_boot    = true
#  floppy_files          = ["${var.autounattend}", "./scripts/disable-screensaver.ps1", "./scripts/disable-winrm.ps1", "./scripts/enable-winrm.ps1", "./scripts/microsoft-updates.bat", "./scripts/win-updates.ps1"]
#  guest_additions_mode  = "disable"
#  iso_checksum          = "${var.iso_checksum}"
#  iso_url               = "${var.iso_url}"
#  memory                = "${var.memory}"
#  shutdown_command      = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
#  switch_name           = "${var.hyperv_switchname}"
#  vm_name               = "WindowsServer2022Core"
#  winrm_password        = "vagrant"
#  winrm_timeout         = "${var.winrm_timeout}"
#  winrm_username        = "vagrant"
#}

#source "qemu" "autogenerated_2" {
#  accelerator      = "kvm"
#  boot_wait        = "0s"
#  communicator     = "winrm"
#  cpus             = 2
#  disk_size        = "${var.disk_size}"
#  floppy_files     = ["${var.autounattend}", "./scripts/disable-screensaver.ps1", "./scripts/disable-winrm.ps1", "./scripts/enable-winrm.ps1", "./scripts/microsoft-updates.bat", "./scripts/win-updates.ps1"]
#  headless         = true
#  iso_checksum     = "${var.iso_checksum}"
#  iso_url          = "${var.iso_url}"
#  memory           = "${var.memory}"
#  output_directory = "windows_2022_docker-qemu"
#  qemuargs         = [["-drive", "file=windows_2022-qemu/{{ .Name }},if=virtio,cache=writeback,discard=ignore,format=qcow2,index=1"], ["-drive", "file=${var.iso_url},media=cdrom,index=2"], ["-drive", "file=${var.virtio_win_iso},media=cdrom,index=3"]]
#  shutdown_command = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
#  vm_name          = "WindowsServer2022Docker"
#  winrm_password   = "vagrant"
#  winrm_timeout    = "${var.winrm_timeout}"
#  winrm_username   = "vagrant"
#}

source "virtualbox-iso" "autogenerated_3" {
  boot_wait            = "2m"
  communicator         = "winrm"
  cpus                 = 2
  disk_size            = "${var.disk_size}"
  floppy_files         = ["${var.autounattend}", "./scripts/disable-screensaver.ps1", "./scripts/disable-winrm.ps1", "./scripts/enable-winrm.ps1", "./scripts/microsoft-updates.bat", "./scripts/win-updates.ps1"]
  guest_additions_mode = "disable"
  guest_os_type        = "Windows2016_64"
  headless             = "${var.headless}"
  iso_checksum         = "${var.iso_checksum}"
  iso_url              = "${var.iso_url}"
  memory               = "${var.memory}"
  shutdown_command     = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
  winrm_password       = "vagrant"
  winrm_timeout        = "${var.winrm_timeout}"
  winrm_username       = "vagrant"
}

#source "vmware-iso" "autogenerated_4" {
#  boot_wait         = "2m"
#  communicator      = "winrm"
#  cpus              = 2
#  disk_adapter_type = "lsisas1068"
#  disk_size         = "${var.disk_size}"
#  disk_type_id      = "${var.disk_type_id}"
#  floppy_files      = ["${var.autounattend}", "./scripts/disable-screensaver.ps1", "./scripts/disable-winrm.ps1", "./scripts/enable-winrm.ps1", "./scripts/microsoft-updates.bat", "./scripts/win-updates.ps1"]
#  guest_os_type     = "windows9srv-64"
#  headless          = "${var.headless}"
#  iso_checksum      = "${var.iso_checksum}"
#  iso_url           = "${var.iso_url}"
#  memory            = "${var.memory}"
#  shutdown_command  = "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
#  vmx_data = {
#    "RemoteDisplay.vnc.enabled" = "false"
#    "RemoteDisplay.vnc.port"    = "5900"
#  }
#  vmx_remove_ethernet_interfaces = true
#  vnc_port_max                   = 5980
#  vnc_port_min                   = 5900
#  winrm_password                 = "vagrant"
#  winrm_timeout                  = "${var.winrm_timeout}"
#  winrm_username                 = "vagrant"
#}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = [""source.virtualbox-iso.autogenerated_3""]

  provisioner "windows-shell" {
    scripts = ["./scripts/enable-rdp.bat"]
  }

  provisioner "powershell" {
    scripts = ["./scripts/vm-guest-tools.ps1", "./scripts/debloat-windows.ps1"]
  }

  provisioner "windows-shell" {
    scripts = ["./scripts/set-winrm-automatic.bat", "./scripts/uac-enable.bat", "./scripts/compile-dotnet-assemblies.bat", "./scripts/dis-updates.bat", "./scripts/compact.bat"]
  }

  post-processor "vagrant" {
    keep_input_artifact  = false
    output               = "windows_2022_core_{{ .Provider }}.box"
    vagrantfile_template = "vagrantfile-windows_2019_core.template"
  }
}
